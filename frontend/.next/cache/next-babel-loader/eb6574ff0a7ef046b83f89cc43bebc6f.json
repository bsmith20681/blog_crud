{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport fetch from 'isomorphic-fetch';\nimport { API } from '../config';\nimport cookie from 'js-cookie';\nexport const signup = user => {\n  return fetch(\"\".concat(API, \"/signup\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application.json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = user => {\n  return fetch(\"\".concat(API, \"/signin\"), {\n    method: 'POST',\n    headers: {\n      Accept: 'application.json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const setCookie = (key, value) => {\n  if (true) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n};\nexport const removeCookie = key => {\n  if (true) {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\nexport const getCookie = key => {\n  if (true) {\n    cookie.get(key);\n  }\n};\nexport const setLocalStorage = (key, value) => {\n  if (true) {\n    localStorage.setItem(key, _JSON$stringify(value));\n  }\n};\nexport const removeLocalStore = key => {\n  if (true) {\n    localStorage.removeItem(key);\n  }\n};\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n};\nexport const isAuth = () => {\n  if (true) {\n    const cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};","map":{"version":3,"sources":["D:/blog_crud/frontend/actions/auth.js"],"names":["fetch","API","cookie","signup","user","method","headers","Accept","body","then","response","json","catch","err","console","log","signin","setCookie","key","value","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeLocalStore","removeItem","authenticate","data","next","token","isAuth","cookieChecked","getItem","JSON","parse"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,kBAAlB;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,MAAM,GAAIC,IAAD,IAAU;AAC9B,SAAOJ,KAAK,WAAIC,GAAJ,cAAkB;AAC5BI,IAAAA,MAAM,EAAE,MADoB;AAE5BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFmB;AAM5BC,IAAAA,IAAI,EAAE,gBAAeJ,IAAf;AANsB,GAAlB,CAAL,CAQNK,IARM,CAQDC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVM,EAWNC,KAXM,CAWAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXP,CAAP;AAYD,CAbM;AAeP,OAAO,MAAMG,MAAM,GAAIZ,IAAD,IAAU;AAC9B,SAAOJ,KAAK,WAAIC,GAAJ,cAAkB;AAC5BI,IAAAA,MAAM,EAAE,MADoB;AAE5BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT,KAFmB;AAM5BC,IAAAA,IAAI,EAAE,gBAAeJ,IAAf;AANsB,GAAlB,CAAL,CAQNK,IARM,CAQDC,QAAQ,IAAI;AAChB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAVM,EAWNC,KAXM,CAWAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXP,CAAP;AAYD,CAbM;AAeP,OAAO,MAAMI,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACvC,YAAmB;AACjBjB,IAAAA,MAAM,CAACkB,GAAP,CAAWF,GAAX,EAAgBC,KAAhB,EAAuB;AACrBE,MAAAA,OAAO,EAAC;AADa,KAAvB;AAGD;AACF,CANM;AAQP,OAAO,MAAMC,YAAY,GAAIJ,GAAD,IAAS;AACnC,YAAmB;AACjBhB,IAAAA,MAAM,CAACqB,MAAP,CAAcL,GAAd,EAAmB;AACjBG,MAAAA,OAAO,EAAC;AADS,KAAnB;AAGD;AACF,CANM;AAQP,OAAO,MAAMG,SAAS,GAAIN,GAAD,IAAS;AAChC,YAAmB;AACjBhB,IAAAA,MAAM,CAACuB,GAAP,CAAWP,GAAX;AACD;AACF,CAJM;AAMP,OAAO,MAAMQ,eAAe,GAAG,CAACR,GAAD,EAAMC,KAAN,KAAgB;AAC7C,YAAoB;AAClBQ,IAAAA,YAAY,CAACC,OAAb,CAAqBV,GAArB,EAA0B,gBAAeC,KAAf,CAA1B;AACD;AACF,CAJM;AAMP,OAAO,MAAMU,gBAAgB,GAAIX,GAAD,IAAS;AACvC,YAAoB;AAClBS,IAAAA,YAAY,CAACG,UAAb,CAAwBZ,GAAxB;AACD;AACF,CAJM;AAMP,OAAO,MAAMa,YAAY,GAAG,CAACC,IAAD,EAAOC,IAAP,KAAgB;AAC1ChB,EAAAA,SAAS,CAAC,OAAD,EAAUe,IAAI,CAACE,KAAf,CAAT;AACAR,EAAAA,eAAe,CAAC,MAAD,EAASM,IAAI,CAAC5B,IAAd,CAAf;AACA6B,EAAAA,IAAI;AACL,CAJM;AAMP,OAAO,MAAME,MAAM,GAAG,MAAM;AAC1B,YAAoB;AAClB,UAAMC,aAAa,GAAGZ,SAAS,CAAC,OAAD,CAA/B;;AACA,QAAGY,aAAH,EAAkB;AAChB,UAAGT,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAH,EAAgC;AAC9B,eAAOC,IAAI,CAACC,KAAL,CAAWZ,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,OAFD,MAEO;AACL,eAAO,KAAP;AACD;AACF;AACF;AACF,CAXM","sourcesContent":["import fetch from 'isomorphic-fetch'\r\nimport {API} from '../config'\r\nimport cookie from 'js-cookie'\r\n\r\nexport const signup = (user) => {\r\n  return fetch(`${API}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application.json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n  .then(response => {\r\n    return response.json()\r\n  })\r\n  .catch(err => console.log(err))\r\n}\r\n\r\nexport const signin = (user) => {\r\n  return fetch(`${API}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application.json',\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify(user)\r\n  })\r\n  .then(response => {\r\n    return response.json()\r\n  })\r\n  .catch(err => console.log(err))\r\n}\r\n\r\nexport const setCookie = (key, value) => {\r\n  if(process.browser){\r\n    cookie.set(key, value, {\r\n      expires:1\r\n    });\r\n  }\r\n}\r\n\r\nexport const removeCookie = (key) => {\r\n  if(process.browser){\r\n    cookie.remove(key, {\r\n      expires:1\r\n    });\r\n  }\r\n}\r\n\r\nexport const getCookie = (key) => {\r\n  if(process.browser){\r\n    cookie.get(key);\r\n  }\r\n}\r\n\r\nexport const setLocalStorage = (key, value) => {\r\n  if(process.browser) {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n  }\r\n}\r\n\r\nexport const removeLocalStore = (key) => {\r\n  if(process.browser) {\r\n    localStorage.removeItem(key)\r\n  }\r\n}\r\n\r\nexport const authenticate = (data, next) => {\r\n  setCookie('token', data.token)\r\n  setLocalStorage('user', data.user)\r\n  next();\r\n}\r\n\r\nexport const isAuth = () => {\r\n  if(process.browser) {\r\n    const cookieChecked = getCookie('token')\r\n    if(cookieChecked) {\r\n      if(localStorage.getItem('user')){\r\n        return JSON.parse(localStorage.getItem('user'))\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}